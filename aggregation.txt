db
.getCollection('articles')
.find({ slug: { $in: [ "javascript-magazin", "java-magazin" ] }})

db
.getCollection('article-favourite')
.aggregate([
  { $match: { userId: "4c973896-5761-41fc-8217-07c5d13a004b" } },
  { $lookup: {
      from: "articles",
      localField: "articleId",
      foreignField: "articleId",
      as: "article"
    }
  },
  { $project: {
      articleId: "$articleId",
      userId: "$userId",
      article: { $arrayElemAt: [ "$article", 0 ] }
    }
  }
])

db
.getCollection('article-favourite')
.aggregate([
  { $match: { userId: "4c973896-5761-41fc-8217-07c5d13a004b" } },
  { $lookup: {
      from: "articles",
      localField: "articleId",
      foreignField: "articleId",
      as: "article"
    }
  },
  { $unwind: {
      path: "$article", preserveNullAndEmptyArrays: true
    }
  }
])

https://stackoverflow.com/questions/37691727/how-to-use-mongodbs-aggregate-lookup-as-findone

Stand der Impl.

db
.getCollection('user-follow')
.aggregate([
  { $match: { userId: "1" } },
  { $lookup: {
      from: "article-favourite",
      localField: "targetId",
      foreignField: "userId",
      as: "favourites"
    }
  },
  { $unwind: { path: "$favourites", preserveNullAndEmptyArrays: true } },
  { $project: {
      userId: "$userId",
      targetId: "$targetId",
      articleId: "$favourites.articleId"
    }
  },
  { $match: { articleId: { $ne: null } } },
  { $lookup: {
      from: "articles",
      localField: "articleId",
      foreignField: "articleId",
      as: "articles"
    }
  },
  { $addFields: { articleSize: { $size: '$articles' } } },
  { $match: { articleSize: { $gte: 1 } } },
  { $unwind: { path: "$articles", preserveNullAndEmptyArrays: true } },
  { $lookup: {
      from: "article-favourite",
      localField: "articleId",
      foreignField: "articleId",
      as: "favourite-count"
    }
  },
  { $lookup: {
      from: "article-favourite",
      localField: "userId",
      foreignField: "userId",
      as: "user-favourites"
    }
  },
  { $addFields: {
      filteredUserFavourites: {
        $filter: {
          input: "$user-favourites",
          as: "userFavourite",
          cond: { $eq: [ '$$userFavourite.articleId', '$articles.articleId' ] }
        }
      }
    }
  },
  {
    $addFields: {
      "articles.favouriteCount": { $size: "$favourite-count" },
      "articles.isFavourite": { $size: "$filteredUserFavourites" }
    }
  },
  {
    $group: {
       _id: { userId: "$userId", targetId: "$targetId" },
       articles: { $push: "$articles" },
       targetIds: { $push: "$targetId"  }
    }
  },
  { $unwind: { path: "$articles", preserveNullAndEmptyArrays: true } },
  { $lookup: {
      from: "user-follow",
      let: { user_id: "$_id.userId", target_ids: "$targetIds" },
      pipeline: [
          { $match:
             { $expr:
                { $and:
                   [
                     { $eq: [ "$userId",  "$$user_id" ] },
                     { $in: [ "$targetId", "$$target_ids" ] }
                   ]
                }
             }
          }
      ],
      as: "followsAuthor"
    }
  },
  {
    $addFields: {
      "articles.isFollowsAuthor": { $size: "$followsAuthor" }
    }
  },
  { $project: {
      _id: "$articles._id",
      userId: "$_id.userId",
      targetId: "$_id.targetId",
      articleId: "$articles.articleId",
      slug: "$articles.slug",
      title: "$articles.title",
      description: "$articles.description",
      body: "$articles.body",
      tags: "$articles.tags",
      favouriteCount: "$articles.favouriteCount",
      isFavourite: "$articles.isFavourite",
      isFollowsAuthor: "$articles.isFollowsAuthor",
    }
  }
])
